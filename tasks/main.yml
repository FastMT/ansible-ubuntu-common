#####################################################################################
# Global
#####################################################################################
- name: Gathering facts if it was not done before
  setup:
  when: ansible_facts['os_family'] is not defined

#####################################################################################
# Set hostname
#####################################################################################
- name: "Configure hostname"
  hostname:
    name: "{{ inventory_hostname }}"
  become: true

- name: "Add hostname into /etc/hosts"
  lineinfile:
    dest: /etc/hosts
    state: present
    line: "{{ ansible_host }} {{ inventory_hostname }}"
    regexp: "^.*[ ]{{ inventory_hostname }}"
  become: true

#####################################################################################
# Configure SSH server
#####################################################################################

- name: "/etc/ssh/sshd_config - disable root login"
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^[#]?PermitRootLogin[ ]" line="PermitRootLogin no"
  become: true
  register: disable_root_login

- name: "/etc/ssh/sshd_config - disable password authentication"
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^[#]?PasswordAuthentication[ ]" line="PasswordAuthentication no"
  become: true
  register: disable_pw_auth
  when: linux_ssh_password_auth == false

- name: "/etc/ssh/sshd_config - enable password authentication"
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^[#]?PasswordAuthentication[ ]" line="PasswordAuthentication yes"
  become: true
  register: disable_pw_auth
  when: linux_ssh_password_auth == true

- name: "/etc/ssh/sshd_config - disable DNS resolving on connect"
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^[#]?UseDNS[ ]" line="UseDNS no"
  become: true
  register: disable_dns_resolve

- name: "/etc/ssh/sshd_config - disable GSSAPIAuthentication"
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^[#]?GSSAPIAuthentication[ ]" line="GSSAPIAuthentication no"
  become: true
  register: disable_GSSAPI

- name: "/etc/ssh/sshd_config - set custom sshd port"
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp="^Port[ ]" line="Port {{ linux_ssh_port | default (ansible_port | default('22')) }}"
  become: true
  when: linux_ssh_port is defined or ansible_port is defined
  register: custom_port

- name: "Restart sshd if config changed"
  service: name=sshd state=restarted
  become: true
  when: >
    disable_root_login.changed or
    disable_pw_auth.changed or
    disable_dns_resolve.changed or
    disable_GSSAPI.changed or custom_port.changed

#####################################################################################
# Configure SUDO
#####################################################################################

- name: "/etc/sudoers - do not require password for sudo"
  lineinfile: dest=/etc/sudoers state=present regexp="^\%sudo[ \t]*ALL\=\(ALL\:ALL\)" line="%sudo ALL=(ALL:ALL) NOPASSWD:ALL"
  become: true
  when: linux_sudo_nopasswd == true

- name: "/etc/sudoers - require password for sudo"
  lineinfile: dest=/etc/sudoers state=present regexp="^\%sudo[ \t]*ALL\=\(ALL\:ALL\)" line="%sudo ALL=(ALL:ALL) ALL"
  become: true
  when: linux_sudo_nopasswd == false

#####################################################################################
# Install packages
#####################################################################################
- name: "Updating repositories..."
  apt: update_cache=yes cache_valid_time=3600 force=yes
  become: true
  check_mode: false
  changed_when: false

- name: "Install tzdata package"
  apt:
    pkg: tzdata
    state: latest
    force: true 
  become: true

- name: "Setting timezone..."
  timezone: "name={{ linux_timezone }}"
  become: true

- name: "Install packages"
  apt:
    state: latest
    pkg:
     - ca-certificates
     - iptables
     - software-properties-common
     - apt-utils
     - aptitude
     - curl
     - nano
     - mc
     - iperf3
     - dstat
     - p7zip-full
     - apt-transport-https
     - iputils-ping
     - net-tools
     - traceroute
     - whois
     - dos2unix
     - mtr
     - dnsutils
     - wireguard
     - telnet
     - nload
     - unzip
     - iotop
     - netplan.io
     - python3-pip
     - jq
     - cron
  become: true

#####################################################################################
# Install KVM guest agent
#####################################################################################

- name: Install KVM Guest agent
  apt:
    state: latest
    pkg:
     - qemu-guest-agent
  become: true
  when:
    - "'kvm' in ansible_virtualization_tech_guest"
    - linux_qemu_guest

- name: Enable KVM Guest agent
  service:
    name: qemu-guest-agent
    state: started
    enabled: true
  become: true
  when:
    - "'kvm' in ansible_virtualization_tech_guest"
    - linux_qemu_guest

#####################################################################################
# Install Chrony
#####################################################################################

- name: "Install Chrony time sync daemon"
  apt:
    state: latest
    pkg:
     - chrony
  when: linux_install_chrony
  become: true

#####################################################################################
# Configure sysctl
#####################################################################################

- name: "Disable IPv6"
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
  with_items:
     - net.ipv6.conf.all.disable_ipv6
     - net.ipv6.conf.default.disable_ipv6
     - net.ipv6.conf.lo.disable_ipv6
  when: linux_disable_ipv6
  become: true
  ignore_errors: true

- name: "Set Sysctl parameters"
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items: "{{ linux_sysctl }}"
  when: linux_sysctl | length > 0
  become: true
  ignore_errors: true

####################################################################
# Set system PAM limits
####################################################################

- name: Set open files limit
  community.general.pam_limits:
    domain: "{{ item.domain }}"
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.pam_item }}"
    value: "{{ item.limit }}"
  become: true
  with_items: "{{ linux_pam_limits }}"
  when: linux_pam_limits | length > 0
